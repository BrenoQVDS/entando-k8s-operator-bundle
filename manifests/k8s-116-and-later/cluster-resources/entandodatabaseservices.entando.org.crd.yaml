apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: entandodatabaseservices.entando.org
  annotations:
    entando.org/controller-image: entando-k8s-database-service-controller
    entando.org/supported-capabilities: mysql.dbms,oracle.dbms,postgresql.dbms,dbms
  labels:
    entando.org/crd-of-interest: EntandoDatabaseService
spec:
  group: entando.org
  versions:
    - name: v1
      served: true
      storage: true
      subresources:
        status: {}
      additionalPrinterColumns:
        - name: Phase
          type: string
          jsonPath: .status.phase
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp
        - name: DBMS
          type: string
          jsonPath: .spec.dbms
        - name: Replicas
          type: integer
          jsonPath: .spec.replicas
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                replicas:
                  description: >-
                    The number of pods that should participate in the cluster of
                    Database servers. For advanced use cases only.
                  type: integer
                  minimum: 1
                  maximum: 10
                dbms:
                  description: >
                    The database management system (DBMS) to make available as a Kubernetes Service.
                    Can be oracle, mysql or postgresql. Only 1 replica of the container is supported if embedded is selected. If
                    Oracle is selected it must be created manually, the operator does not deploy Oracle instances.
                    See [here](https://dev.entando.org/v7.1/docs/concepts/operator-intro.html#database-deployment) for how the operator will create and configure the DBMS.
                  type: string
                  pattern: ^(mysql|oracle|postgresql)$
                storageClass:
                  description: >
                    The name of the StorageClass to use for PersistentVolumeClaims created for this EntandoDatabaseService
                  type: string
                provisioningStrategy:
                  description: >
                    The strategy that will be used to make this EntandoDatabaseService
                    available to its consumers. Values:

                    * UseExternal - use this EntandoDatabaseService resource to point to an existing external Database Service that
                    points to an external database service as specified in the 'host' and 'port' properties.

                    * DeployDirectly - deploy a new Database Service on demand
                  type: string
                  pattern: ^(UseExternal|DeployDirectly|DelegateToOperator)$
                createDeployment:
                  description: >
                    **DEPRECATED** - use provisioningStrategy instead. If no provisioningStrategy is specified, a
                    value of 'true' will be the equivalent of a provisioningStrategy of 'DeployDirectly'.
                  type: boolean
                host:
                  description: >
                    When 'spec.provisioningStrategy' is 'UseExternal', this field is required to
                    create a Service  that points to an external database server using
                    the value of the host property.
                  type: string
                  pattern: '^([A-Za-z0-9-]{1,63}\.)*[[A-Za-z0-9-]{1,63}$'
                port:
                  description: >
                    When 'spec.provisioningStrategy' is 'UseExternal', this field is required to
                    create a Service that points to an external database service running
                    on the port specified on this property. If no value is provided, it
                    defaults to the default port of the DBMS in question.
                  type: integer
                databaseName:
                  description: >
                    When connecting to an external database, this is the name of the database
                    that this database service will connect to. When deploying the DBMS directly
                    and PostgreSQL is being used, it will create the database
                    on PostgreSQL. This property has no effect on MySQL.
                  type: string
                tablespace:
                  description: >
                    Only used in Oracle to specify the tablespace that tables should be
                    created on.
                  type: string
                secretName:
                  description: >
                    The name of a Kubernetes Secret that contains the username and password
                    of a user on the database server that has superuser permissions.
                  type: string
                providedCapabilityScope:
                  description: >
                    The scope at which this EntandoDatabaseService will be made available to
                    possible consumers. Values are as follows:

                    *  Dedicated - only valid when specified from a consumer, and will be resolved using the suffix '-db'

                    *  Specified - not supported in any of our consumers yet.

                    *  Namespace - all requirements for a DBMS with matching implementations in the namespace will resolve to this instance

                    *  Cluster - all requirements for a DBMS with matching implementations in the cluster will resolve to this instance

                    *  Labeled - not supported in any of our consumers yet.
                  type: string
                  pattern: ^(Dedicated|Specified|Namespace|Cluster|Labeled)$
                jdbcParameters:
                  type: object
                  description: >
                    A map of name/value pairs that will be appended to the connection string
                    to the database in questions.
                  x-kubernetes-preserve-unknown-fields: true
                serviceAccountToUse:
                  description: >
                    The Kubernetes ServiceAccount in the Namespace of the
                    EntandoDatabaseService that is to be used for the Pods
                    hosting the database service. Can be left empty for most
                    situations, as the database container doesn't make direct use
                    of Kubernetes resources.
                  type: string
                  pattern: '^([a-z])+([a-z0-9-\.])*[a-z0-9]$'
                environmentVariables:
                  description: >
                    A list of environment variable following the standard
                    structure of Kubernetes Environment Variables
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                      valueFrom:
                        type: object
                        properties:
                          configMapKeyRef:
                            type: object
                            properties:
                              name:
                                description: >-
                                  Name of a ConfigMap in the same namespace as
                                  the EntandoDatabaseService
                                type: string
                              key:
                                description: >-
                                  Key of the ConfigMap entry in that holds the
                                  value to be used for the EnvironmentVariable
                                type: string
                          fieldRef:
                            type: object
                            properties:
                              apiVersion:
                                description: >-
                                  Version of the API to used for the field
                                  expression
                                type: string
                              fieldPath:
                                description: Full expression starting from the Pod resource
                                type: string
                          resourceFieldRef:
                            type: object
                            properties:
                              containerName:
                                description: Name of the container to use
                                type: string
                              resource:
                                description: Name of the resource to use
                                type: string
                          secretKeyRef:
                            type: object
                            properties:
                              name:
                                description: >-
                                  Name of a Secret in the same namespace as the
                                  EntandoDatabaseService
                                type: string
                              key:
                                description: >-
                                  Key of the Secret entry in that holds the
                                  value to be used for the EnvironmentVariable
                                type: string
                resourceRequirements:
                  description: >
                    The projected resource requirements of the given database
                    deployment. Specifies the limits that the container is
                    expected to respect, and the size of requests that will be
                    initiated on behalf of the container. When omitted our known
                    defaults will be applied.
                  type: object
                  properties:
                    requests:
                      type: object
                      properties:
                        storage:
                          description: >
                            Size of persistent storage that will be requested when deployed. Can be omitted. Supported only
                            by a small subset of Kubernetes storage providers.
                          type: string
                        memory:
                          description: >
                            The amount of memory that will be requested when deployed. A pod will only be deployed to a node
                            that has this amount of memory available. You can  express memory as a plain integer using one of
                            these suffixes: T, G, M, K. You can also use the power-of-two equivalents: Ti, Gi, Mi, Ki.
                          type: string
                        cpu:
                          description: >
                            The amount of CPU units that will be requested from a node at deployment time. A pod will only be
                            deployed to a node if the node has this amount of CPU units available. Supports decimal numbers, or
                            alternatively the suffix 'm' can be used to specify a millicore. Precision lower than 1m is not supported.
                          type: string
                    limits:
                      type: object
                      properties:
                        storage:
                          description: >
                            The maximum amount of persistent storage required by the
                            database server.  Limits and requests for memory are
                            measured in bytes. You can express storage as a plain
                            integer using one of these suffixes: T, G, M, K. You can
                            also use the power-of-two equivalents: Ti, Gi, Mi, Ki.
                          type: string
                        memory:
                          description: >
                            The maximum amount of memory that the container is expected to use. Kubernetes will limit the amount
                            of memory to the container the to amount specified. You can  express memory as a plain integer using one of
                            these suffixes: T, G, M, K. You can also use the power-of-two equivalents: Ti, Gi, Mi, Ki.
                          type: string
                        cpu:
                          description: >
                            The maximum amount of CPU units that will be required by the container.Supports decimal numbers, or
                            alternatively the suffix 'm' can be used to specify a millicore. Precision lower than 1m is not supported.
                          type: string
                    storageRequest:
                      description: >
                        Size of persistent storage that will be requested when
                        deployed. Can be omitted. Supported only by a small
                        subset of Kubernetes storage providers.
                      type: string
                    storageLimit:
                      description: >
                        The maximum amount of persistent storage required by the
                        database server.  Limits and requests for memory are
                        measured in bytes. You can express storage as a plain
                        integer using one of these suffixes: T, G, M, K. You can
                        also use the power-of-two equivalents: Ti, Gi, Mi, Ki.
                      type: string
                    memoryRequest:
                      description: >
                        The amount of memory that will be requested when
                        deployed. A pod will only be deployed to a node that has
                        this amount of memory available. You can  express memory
                        as a plain integer using one of these suffixes: T, G, M,
                        K. You can also use the power-of-two equivalents: Ti,
                        Gi, Mi, Ki.
                      type: string
                    memoryLimit:
                      description: >
                        The maximum amount of memory that the container is
                        expected to use. Kubernetes will limit the amount of
                        memory to the container the to amount specified. You
                        can  express memory as a plain integer using one of
                        these suffixes: T, G, M, K. You can also use the
                        power-of-two equivalents: Ti, Gi, Mi, Ki.
                      type: string
                    cpuRequest:
                      description: >
                        The amount of CPU units that will be requested from a
                        node at deployment time. A pod will only be deployed to
                        a node if the node has this amount of CPU units
                        available. Supports decimal numbers, or alternatively
                        the suffix 'm' can be used to specify a millicore.
                        Precision lower than 1m is not supported.
                      type: string
                    cpuLimit:
                      description: >
                        The maximum amount of CPU units that will be required by
                        the container.Supports decimal numbers, or alternatively
                        the suffix 'm' can be used to specify a millicore.
                        Precision lower than 1m is not supported.
                      type: string
            status:
              type: object
              properties:
                observedGeneration:
                  type: number
                phase:
                  type: string
                serverStatuses:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
  names:
    kind: EntandoDatabaseService
    plural: entandodatabaseservices
    shortNames:
      - eds
  scope: Namespaced
